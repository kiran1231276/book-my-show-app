package java.in.ashokit.dao;

import java.in.ashokit.dto.EmpDto;
import java.in.ashokit.util.ConnectionFactory;
import java.sql.Connection;
import java.sql.PreparedStatement;



public class EmpDao {

	private static final String INSERT_SQL = "INSERT INTO emp_table (emp_name, user_email, emp_gender, emp_dept, emp_exp) VALUES (?, ? ,?, ?, ?)";
	
	 
	public boolean saveEmp(EmpDto empDto) {
		int count = 0;
		try {
			Connection con = ConnectionFactory.getConnection();
			PreparedStatement pstmt = con.prepareStatement(INSERT_SQL);

			pstmt.setString(1, empDto.getEmpName());
			pstmt.setString(2, empDto.getEmpEmail());
			pstmt.setString(3, empDto.getEmpGender());
			pstmt.setString(4, empDto.getEmpDept());
			pstmt.setInt(5, empDto.getEmpExp());

			count = pstmt.executeUpdate();
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return count>0;
	}
}

/*
 * 
 * 
 * public List<UserDto> getUsers() { List<UserDto> users = new ArrayList<>();
 * try { Connection con = ConnectionFactory.getConnection(); Statement stmt =
 * con.createStatement(); ResultSet rs = stmt.executeQuery(SELECT_SQL);
 * 
 * while (rs.next()) { UserDto user = new UserDto();
 * user.setUserId(rs.getInt("user_id"));
 * user.setUserName(rs.getString("user_name"));
 * user.setUserEmail(rs.getString("user_email"));
 * user.setUserPhno(rs.getLong("user_phno"));
 * 
 * users.add(user); } } catch (Exception e) { e.printStackTrace(); } return
 * users; }
 * 
 * public boolean deleteUserById(int userId) { boolean isDeleted = false; try {
 * Connection con = ConnectionFactory.getConnection(); PreparedStatement pstmt =
 * con.prepareStatement(DELETE_SQL); pstmt.setInt(1, userId); int count =
 * pstmt.executeUpdate(); isDeleted = count > 0; } catch (Exception e) {
 * e.printStackTrace(); } return isDeleted; }
 * 
 * public boolean updateUser(UserDto userDto) { boolean isUpdated = false; try {
 * Connection con = ConnectionFactory.getConnection(); PreparedStatement pstmt =
 * con.prepareStatement(UPDATE_SQL); pstmt.setString(1, userDto.getUserName());
 * pstmt.setString(2, userDto.getUserEmail()); pstmt.setLong(3,
 * userDto.getUserPhno()); pstmt.setInt(4, userDto.getUserId()); int count =
 * pstmt.executeUpdate(); isUpdated = count > 0; } catch (Exception e) {
 * e.printStackTrace(); } return isUpdated; } }
 */